{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","put","Notification","message","className","NotificationFailed","Name","props","namePerson","person","onClick","buttonHandle","NameTotal","phoneNumbersArray","phoneNumbers","map","nameObject","key","url","find","p","window","confirm","delete","setPersons","filter","setMessage","setTimeout","catch","error","setMessageError","onDeleteClick","Filter","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addName","newName","handleNameChange","newphoneNumber","handlephoneNumberChange","type","App","useState","persons","setNewName","setNewphoneNumber","setNewFilter","messageError","useEffect","personService","initialPeople","namesToShow","personName","toLowerCase","filterUsed","includes","event","target","preventDefault","varResult","changedPerson","name","phoneNumber","returnedPerson","newPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e15403ec.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () =>{\n    const response =  axios.get(baseUrl)\n    return response.then(response => response.data)\n} \n\nconst create = newObject =>{\n    const response = axios.post(baseUrl,newObject)\n    return response.then(response => response.data)\n}\n\nconst update = (id, newObject) =>{\n    const response =  axios.put(`${baseUrl}/${id}`, newObject)\n    return response.then(response=>response.data)\n\n}\n\nexport default{\n    getAll:getAll,\n    create: create,\n    update: update\n}","\nimport React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport personService from './services/persons'\n\n\nconst Notification = ({message}) =>{\n  if(message === null){\n    return null\n  }\n\n  return(\n    <div className = \"message\">\n      {message}\n    </div>\n  )\n}\n\nconst NotificationFailed = ({message}) =>{\n  if(message === null){\n    return null\n  }\n\n  return(\n    <div className = \"messageError\">\n      {message}\n    </div>\n  )\n}\n\nconst Name = (props) =>{\n    const namePerson = props.person\n    return(\n      <div>\n        {namePerson[\"name\"]} {namePerson[\"phoneNumber\"]} <button onClick = {props.buttonHandle}>delete</button>\n      </div>\n    )\n  }\n  \n  const NameTotal = (props)=>{\n    const phoneNumbersArray = props.phoneNumbers  \n    const onDeleteClick = (id)=>{\n      const url = `http://localhost:3001/persons/${id}`\n      const person = phoneNumbersArray.find( p => p.id === id)\n      const proceedDelete = window.confirm(\n        `Delete ${person[\"name\"]}?`\n      )\n      if(proceedDelete){\n        axios.delete(url)\n        .then( () =>{\n          props.setPersons(phoneNumbersArray.filter(p => p.id !== id))\n          props.setMessage(\n            `Successfully removed ${person[\"name\"]}`\n          )\n          setTimeout(()=>{\n            props.setMessage(null)\n          },3000)\n        })\n        .catch(error=>{\n          props.setMessageError(\n            `Failed ${person[\"name\"]} not found`\n          )\n          setTimeout(()=>{\n            props.setMessageError(null)\n            props.setPersons(phoneNumbersArray.filter(p=> p.id !== id))\n          },3000)\n\n        })\n      }\n\n    }\n    return(\n      <div>\n        {phoneNumbersArray.map((nameObject) => {\n          return <Name person = {nameObject} key = {nameObject[\"name\"]} buttonHandle = {() => onDeleteClick(nameObject.id)} />\n        })}\n      </div>\n    )\n  }\n  \n  const Filter = (props)=>{\n    return(\n      <div>\n      filter shown with <input\n            value = {props.newFilter}\n            onChange = {props.handleFilterChange}/>\n    </div>\n    )\n  }\n  \n  const PersonForm = (props) =>{\n    return(\n      <form onSubmit = {props.addName}>\n          <div>\n            <div> name: <input\n                value = {props.newName}\n                onChange = {props.handleNameChange}/>\n            </div>\n            <div>\n                phoneNumber: <input\n                value = {props.newphoneNumber}\n                onChange = {props.handlephoneNumberChange}/>\n            </div>\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    )\n  }\n  \n  \n  \n  const App = () =>{\n    const[persons,setPersons] = useState([])\n  \n    const [newName,setNewName] = useState('')\n  \n    const[newphoneNumber, setNewphoneNumber] = useState('')\n  \n    const [newFilter,setNewFilter] = useState('')\n\n    const[message, setMessage] = useState(null)\n\n    const [messageError, setMessageError] = useState(null)\n\n\n    useEffect(()=>{\n      personService\n          .getAll()\n          .then(initialPeople =>{\n            setPersons(initialPeople)\n          })\n          .catch(error =>{\n            setMessageError(\n              `Failed. Resources not found`\n            )\n\n            setTimeout(()=>{\n              setMessageError(null)\n            },3000)\n          })\n\n    },[])\n   \n    const addName = (event) =>{\n      event.preventDefault()\n      var varResult = persons.find((person) => person[\"name\"] === newName)\n  \n      if(typeof varResult !== 'undefined'){\n        const id = varResult.id\n        const url = `http://localhost:3001/api/persons/${id}`\n        const proceedUpdate = window.confirm(`${newName} replace the old phoneNumber with a new phoneNumber ?`)\n        if(proceedUpdate){\n          const changedPerson = {\n            name: newName,\n            phoneNumber: newphoneNumber\n          }\n\n          personService.update(id, changedPerson)\n          .then(returnedPerson=>{\n            setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\n            setMessage(\n              `Successfully updated ${returnedPerson[\"name\"]}`\n            )\n\n            setTimeout(()=>{\n              setMessage(null)\n            }, 3000)\n          })\n          .catch(error =>{\n            setMessageError(\n              `Failed ${changedPerson[\"name\"]} not found`\n            )\n\n            setTimeout(() =>{\n              setMessageError(null)\n            },3000)\n          })\n\n        }\n        setNewName('')\n        setNewphoneNumber('')\n  \n      }\n      else{\n        const newPerson = {\n          name : newName,\n          phoneNumber : newphoneNumber\n        }\n\n        personService.create(newPerson)\n                      .then(returnedPerson=>{\n                        setPersons(persons.concat(returnedPerson))\n                        setNewName('')\n                        setNewphoneNumber('')\n                        setMessage(\n                          `Successfully added ${newPerson[\"name\"]}`\n                        )\n\n                        setTimeout(()=>{\n                          setMessage(null)\n                        },3000)\n\n                      })\n                      .catch(error =>{\n                        setNewName('')\n                        setNewphoneNumber('')\n                        setMessageError(\n                          `Failed ${newPerson[\"name\"]} not found`\n\n                        )\n                        setTimeout(()=>{\n                          setMessage(null)\n                        },3000)\n                      })      \n      }\n    }\n  \n    const handleNameChange = (event) =>{\n      setNewName(event.target.value)\n    }\n  \n    const handlephoneNumberChange = (event) =>{\n      setNewphoneNumber(event.target.value)\n    }\n  \n    const handleFilterChange = (event) =>{\n      setNewFilter(event.target.value)\n    }\n  \n    const namesToShow = persons.filter((person)=> {\n      let personName = person[\"name\"].toLowerCase()\n      let filterUsed = newFilter.toLowerCase()\n      return personName.includes(filterUsed)\n    })\n  \n    return (\n      <div>\n        <Notification message = {message} />\n        <NotificationFailed message = {messageError}/>\n        <h2>Phonebook</h2>\n       <Filter newFilter = {newFilter} handleFilterChange = {handleFilterChange}/>\n        <h2>add a new</h2>\n        <PersonForm addName = {addName} newName = {newName}\n        handleNameChange = {handleNameChange}\n        newphoneNumber = {newphoneNumber} \n        handlephoneNumberChange = {handlephoneNumberChange}/>\n        <h2>phoneNumbers</h2>\n    <NameTotal phoneNumbers = {namesToShow} setPersons = {setPersons} \n    message = {message} setMessage = {setMessage}\n    messageError = {messageError} setMessageError = {setMessageError}/>\n      </div>\n    )\n  }\n\n  export default App","import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}